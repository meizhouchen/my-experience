import{_ as s,o,c as a,O as l}from"./chunks/framework.3938e08f.js";const A=JSON.parse('{"title":"Cookie","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/network/HTTP/Cookie.md","filePath":"front-end/network/HTTP/Cookie.md"}'),n={name:"front-end/network/HTTP/Cookie.md"},e=l(`<h1 id="cookie" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies#Secure_and_HttpOnly_cookies" target="_blank" rel="noreferrer">Cookie</a> <a class="header-anchor" href="#cookie" aria-label="Permalink to &quot;[Cookie](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies#Secure_and_HttpOnly_cookies)&quot;">​</a></h1><h2 id="创建-cookie" tabindex="-1">创建 Cookie <a class="header-anchor" href="#创建-cookie" aria-label="Permalink to &quot;创建 Cookie&quot;">​</a></h2><p>服务器在 HTTP 响应头里面添加一个或多个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Set-Cookie" target="_blank" rel="noreferrer">Set-Cookie</a> 选项。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> \\</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">cookie</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;">\\</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">cookie</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><p>服务器响应数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">HTTP</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;"> OK</span></span>
<span class="line"><span style="color:#A6ACCD;">Content</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">html</span></span>
<span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> yummy_cookie</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">choco</span></span>
<span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> tasty_cookie</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">strawberry</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">[页面内容]</span></span></code></pre></div><p>每一次新请求，浏览器都会将之前保存的 Cookie 信息通过 Cookie 请求头部再发送给服务器。如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">GET </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">sample_page</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html HTTP</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">1.1</span></span>
<span class="line"><span style="color:#FFCB6B;">Host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> www</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">example</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">org</span></span>
<span class="line"><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> yummy_cookie</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">choco</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> tasty_cookie</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">strawberry</span></span></code></pre></div><h2 id="cookie-的过期时间" tabindex="-1">Cookie 的过期时间 <a class="header-anchor" href="#cookie-的过期时间" aria-label="Permalink to &quot;Cookie 的过期时间&quot;">​</a></h2><ul><li>不设置 max-age 和 expires， Cookie 会在当前的会话结束之后删除。浏览器定义了“当前会话”结束的时间，一些浏览器重启时会使用会话恢复。这可能导致会话 cookie 无限延长。</li><li>持久性 Cookie 在过期时间（Expires）指定的日期或有效期（Max-Age）指定的一段时间后被删除。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">et</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">a3fWa</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> Expires</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Wed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;"> Oct </span><span style="color:#F78C6C;">2015</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">07</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> GMT</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>当 Cookie 的过期时间（ Expires）被设定时，设定的日期和时间只与客户端相关，而不是服务端。</p></div><h2 id="限制访问-cookie" tabindex="-1">限制访问 Cookie <a class="header-anchor" href="#限制访问-cookie" aria-label="Permalink to &quot;限制访问 Cookie&quot;">​</a></h2><p>有两种方法可以确保 Cookie 被安全发送，并且不会被意外的参与者或脚本访问：Secure 属性和 HttpOnly 属性。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Set</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">Cookie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> id</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">a3fWa</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> Expires</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Wed</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;"> Oct </span><span style="color:#F78C6C;">2015</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">07</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">28</span><span style="color:#A6ACCD;">:</span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;"> GMT</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> Secure</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> HttpOnly</span></span></code></pre></div><h2 id="document-cookie" tabindex="-1">Document.cookie <a class="header-anchor" href="#document-cookie" aria-label="Permalink to &quot;Document.cookie&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cookie </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yummy_cookie=choco</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cookie </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tasty_cookie=strawberry</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(document</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cookie)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// logs &quot;yummy_cookie=choco; tasty_cookie=strawberry&quot;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>JavaScript 可以通过跨站脚本攻击（XSS）的方式来窃取 Cookie。</p></div><h2 id="安全" tabindex="-1">安全 <a class="header-anchor" href="#安全" aria-label="Permalink to &quot;安全&quot;">​</a></h2><p>缓解涉及 Cookie 的攻击的方法：</p><ul><li>使用 HttpOnly 属性可防止通过 JavaScript 访问 cookie 值。</li><li>用于敏感信息（例如指示身份验证）的 Cookie 的生存期应较短，并且 SameSite 属性设置为 Strict 或 Lax。（请参见上方的 SameSite 属性。）在支持 SameSite 的浏览器中，这样做的作用是确保不与跨站点请求一起发送身份验证 cookie。因此，这种请求实际上不会向应用服务器进行身份验证。</li></ul>`,22),p=[e];function t(c,r,C,i,D,y){return o(),a("div",null,p)}const d=s(n,[["render",t]]);export{A as __pageData,d as default};
