import{_ as e,o as a,c as r,O as t}from"./chunks/framework.954c1bae.js";const b=JSON.parse('{"title":"JSON.parse()","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/js/json/index.md","filePath":"front-end/js/json/index.md"}'),o={name:"front-end/js/json/index.md"},n=t('<h1 id="json-parse" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON" target="_blank" rel="noreferrer">JSON.parse()</a> <a class="header-anchor" href="#json-parse" aria-label="Permalink to &quot;[JSON.parse()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON)&quot;">​</a></h1><p>JSON 是一种语法，用来序列化对象、数组、数值、字符串、布尔值和 null。</p><h2 id="使用技巧" tabindex="-1">使用技巧 <a class="header-anchor" href="#使用技巧" aria-label="Permalink to &quot;使用技巧&quot;">​</a></h2><h3 id="深拷贝" tabindex="-1">深拷贝 <a class="header-anchor" href="#深拷贝" aria-label="Permalink to &quot;深拷贝&quot;">​</a></h3><p>let newObj = JSON.parse(JSON.stringify(obj))</p><h4 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h4><p>字符串非引用类型</p><h4 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h4><p>仅支持对象、数组、数值、字符串、布尔值和 null。</p>',9),s=[n];function l(i,d,c,h,p,_){return a(),r("div",null,s)}const u=e(o,[["render",l]]);export{b as __pageData,u as default};
