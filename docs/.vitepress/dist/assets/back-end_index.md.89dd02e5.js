import{_ as a,o as e,c as t,O as n}from"./chunks/framework.3938e08f.js";const r="/my-experience/assets/1.0a520bb3.jpg",u=JSON.parse('{"title":"学如流水行舟","description":"","frontmatter":{},"headers":[],"relativePath":"back-end/index.md","filePath":"back-end/index.md"}'),o={name:"back-end/index.md"},i=n('<h1 id="学如流水行舟" tabindex="-1">学如流水行舟 <a class="header-anchor" href="#学如流水行舟" aria-label="Permalink to &quot;学如流水行舟&quot;">​</a></h1><h2 id="计算机网络" tabindex="-1">计算机网络 <a class="header-anchor" href="#计算机网络" aria-label="Permalink to &quot;计算机网络&quot;">​</a></h2><p>学习时，推荐你抓住一条主线 「一个数据包是如何发送出去的？」 《计算机网络：自顶向下方法》 这本书从我们最常接触的 HTTP、FTP、SMTP 等应用层协议讲起，可以清晰看到引入各个层的作用。 学习每层协议的时候，最好自己抓包看下，wireshark抓包遇到三次快速重传会怎么样？这样映像会更加深刻</p><h2 id="数据库" tabindex="-1">数据库： <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库：&quot;">​</a></h2><p>sql得会写吧，这个推荐看下《SQL必知必会》，几个范式有没有正式运用过? 如何进行领域建模、数据库设计，才能够使得每次查询的开销最小？</p><p>数据库原理方面可以看看《数据库系统概念》，这本书挺厚的，包含了从 SQL 到数据库设计再到数据库原理、分布式数据库都有，可以挑着看，比如关系模型、数据库设计（三大范式）、数据磁盘存储和组织方式、索引、并发控制等。</p><p>当然了整个数据库最重要的还是索引和并发控制（锁、MVCC等），这部分也是面试常考的： 索引存储结构：B树、B+树索引、Hash索引 索引的使用：主键索引、覆盖索引、最左前缀原则、索引下推等 锁：乐观锁、悲观锁、表锁，行锁，意向锁，读锁，写锁等等 MySQL InnoDB MVCC 实现机制 存储引擎：InnoDB、MyISAM等，各自的优缺点 事务：ACID理论</p><p>这部分推荐两本书：《高性能MySQL》《MySQL技术内幕》</p><h2 id="网络编程" tabindex="-1">网络编程 <a class="header-anchor" href="#网络编程" aria-label="Permalink to &quot;网络编程&quot;">​</a></h2><p>推荐几本书： 《Linux高性能服务器编程》 《Unix网络编程》 《Unix环境高级编程》</p><p>如何才能减少和科班的差距？ <img src="'+r+'" alt=""></p><p>接下来说下我认为对一个「计算机知识体系完整的毕业生」最重要的课程，你至少得把下面这些课 都学了：1、 编程语言：C/C++ （学好了这两门，基本其它编程语言一周就上手了）2、《系统级编程》(我们教材是CSAPP，这是我本科上过最值的课！System Programing)3、《数据结构与算法》4、《组成原理和体系结构》5、《操作系统》6、《编译原理》7、《计算机网络》8、《数学课》：线代、离散、高数</p>',12),s=[i];function c(d,p,_,h,l,m){return e(),t("div",null,s)}const P=a(o,[["render",c]]);export{u as __pageData,P as default};
